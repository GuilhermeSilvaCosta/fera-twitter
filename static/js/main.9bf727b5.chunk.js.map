{"version":3,"sources":["@history.js","services/api.js","pages/EditProfile/AvatarInput/AvatarInput.js","pages/EditProfile/AvatarInput/index.js","pages/EditProfile/BackgroundInput/BackgroundInput.js","pages/EditProfile/BackgroundInput/index.js","store/modules/user/actions.js","components/Button/Button.js","components/Button/index.js","pages/EditProfile/EditProfile.js","pages/EditProfile/index.js","pages/Main/ImageInput/ImageInput.js","pages/Main/ImageInput/index.js","components/Tweet/Tweet.js","components/Tweet/index.js","pages/Main/Main.js","pages/Main/index.js","pages/Profile/Profile.js","routes.js","components/Navigation/Navigation.js","components/Navigation/index.js","components/TrendTopics/TrendTopics.js","components/TrendTopics/index.js","store/modules/user/reducer.js","store/modules/rootReducer.js","store/modules/user/sagas.js","store/modules/rootSaga.js","store/index.js","store/persistReducers.js","store/createStore.js","App.js","index.js"],"names":["history","basename","process","api","axios","create","baseURL","AvatarInput","waitUpload","useField","defaultValue","registerField","useState","preview","setPreview","ref","useRef","e","a","data","FormData","append","target","files","post","response","url","useEffect","current","name","path","className","htmlFor","src","alt","type","id","accept","data-file","onChange","BackgroundInput","userSuccess","user","payload","Button","children","props","EditProfile","dispatch","useDispatch","useSelector","state","setWaitUpload","waitUpload2","setWaitUpload2","initialData","onSubmit","updateUserRequest","push","style","display","ImageInput","value","fileName","setFileName","Tweet","tweet","content","createdAt","tweet_url","image_url","author","identify","date","useMemo","formatDistanceToNow","parseISO","locale","pt","Main","form","setForm","tweets","setTweets","handleChange","preventDefault","body","_id","get","loadTweets","placeholder","map","key","Profile","Routes","exact","component","background_url","onClick","Navigation","to","Link","TrendTopics","INITIAL_STATE","loading","combineReducers","action","produce","draft","requestUser","updateUser","call","put","all","takeLatest","rootSaga","reducers","sagaMiddleware","createSagaMiddleware","middlewares","store","enhancer","applyMiddleware","createStore","rootReducer","persistReducer","storage","whitelist","persistor","persistStore","run","App","renderRoutes","routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bf727b5.chunk.js","sourcesContent":["import * as history from 'history';\n\nexport default history.createBrowserHistory({\n    basename: process.env.PUBLIC_URL\n});\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://potfolio.redirectme.net/feratwitter'\n})\n\nexport default api;","import React,  { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport api from 'services/api';\n\nimport './AvatarInput.css';\n\nfunction AvatarInput({ waitUpload }) {\n\n    const { defaultValue, registerField } = useField('image_url');\n\n    const [preview, setPreview] = useState(defaultValue);\n\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n            registerField({\n                name: 'image_url',\n                ref: ref.current,\n                path: 'dataset.file',\n            });\n        }\n    }, [ref, registerField]);\n\n    async function handleChange(e) {\n\n        waitUpload(true);\n        const data = new FormData();\n\n        data.append('file', e.target.files[0]);\n\n        const response = await api.post('files', data);\n\n        const { url } = response.data;\n        setPreview(url);\n        waitUpload(false);\n    }\n\n    return (\n        <div className=\"avatar-input-container\">\n            <label htmlFor=\"avatar\">\n                <img src={preview || 'https://api.adorable.io/avatars/50/abott@adorable.png'} alt=\"\" />\n\n                <input\n                    type=\"file\"\n                    id=\"avatar\"\n                    accept=\"image/*\"\n                    data-file={preview}\n                    onChange={handleChange}\n                    ref={ref}\n                />\n            </label>\n        </div>\n    );\n}\n\nexport default AvatarInput;","import AvatarInput from './AvatarInput';\n\nexport default AvatarInput;","import React,  { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport api from 'services/api';\n\nimport './BackgroundInput.css';\n\nfunction BackgroundInput({ waitUpload }) {\n\n    const { defaultValue, registerField } = useField('background_url');\n\n    const [preview, setPreview] = useState(defaultValue);\n\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n            registerField({\n                name: 'background_url',\n                ref: ref.current,\n                path: 'dataset.file',\n            });\n        }\n    }, [ref, registerField]);\n\n    async function handleChange(e) {\n        waitUpload(true);\n        const data = new FormData();\n\n        data.append('file', e.target.files[0]);\n\n        const response = await api.post('files', data);\n\n        const { url } = response.data;\n        setPreview(url);\n        waitUpload(false);\n    }\n\n    return (\n        <div className=\"background-input-container\">\n            <label htmlFor=\"background\">\n                <img src={preview || 'https://api.adorable.io/avatars/50/abott@adorable.png'} alt=\"\" />\n\n                <input\n                    type=\"file\"\n                    id=\"background\"\n                    accept=\"image/*\"\n                    data-file={preview}\n                    onChange={handleChange}\n                    ref={ref}\n                />\n            </label>\n        </div>\n    );\n}\n\nexport default BackgroundInput;","import BackgroundInput from './BackgroundInput';\n\nexport default BackgroundInput;","export function userRequest(email, password) {\n    return {\n        type: '@user/USER_REQUEST'\n    };\n}\n\nexport function updateUserRequest(data) {\n    return {\n        type: '@user/UPDATE_USER_REQUEST',\n        payload: { data }\n    }\n}\n\nexport function userSuccess(user) {\n    return {\n        type: '@auth/USER_SUCCESS',\n        payload: { user },\n    };\n}","import React from 'react';\n\nimport './Button.css'\n\nfunction Button({ children, ...props }) {\n\n    return (\n        <div className=\"button-container\">\n            <button {...props}>\n                {children}\n            </button>\n        </div>\n    )\n}\n\nexport default Button;","import Button from './Button';\n\nexport default Button;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input } from '@rocketseat/unform';\nimport AvatarInput from './AvatarInput';\nimport BackgroundInput from './BackgroundInput';\nimport { updateUserRequest } from 'store/modules/user/actions';\nimport history from '@history'\n\nimport Button from 'components/Button';\n\nimport './EditProfile.css';\n\nfunction EditProfile() {\n\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user.data);\n\n    const [waitUpload, setWaitUpload] = useState(false);\n    const [waitUpload2, setWaitUpload2] = useState(false);\n\n    function handleSubmit(data) {\n        dispatch(updateUserRequest(data));\n        history.push('/profile')\n    }\n\n    return (\n        <div className=\"edit-profile-container\">\n            <div className=\"title\">\n                <strong>{user.name}</strong>\n            </div>\n            <div className=\"profile\">\n                <div className=\"details\">\n                    <Form initialData={user} onSubmit={handleSubmit}>\n\n                        <BackgroundInput name=\"background_url\" waitUpload={setWaitUpload2} />\n\n                        <AvatarInput name=\"image_url\" waitUpload={setWaitUpload} />\n\n                        <div className=\"inputs\">\n                            <label htmlFor=\"identify\">Identificador</label>\n                            <Input type=\"text\" name=\"identify\" />\n\n                            <label htmlFor=\"name\">Nome</label>\n                            <Input type=\"text\" name=\"name\" />\n\n                            <Input type=\"text\" name=\"_id\" style={{ display: 'none' }} />\n                            \n\n                            {!waitUpload && !waitUpload2 && \n                            <Button type=\"submit\">\n                                Salvar\n                            </Button>}\n\n                            {(!!waitUpload || !!waitUpload2) && <span>Aguarde, carregando imagem...</span>}\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditProfile;","import EditProfile from './EditProfile';\n\nexport default EditProfile;","import React, { useState, useEffect } from 'react';\nimport api from 'services/api';\n\nimport './ImageInput.css'\n\nfunction ImageInput({ value, onChange, name, waitUpload }) {\n\n    const [preview, setPreview] = useState(value);\n    const [fileName, setFileName] = useState(null);\n\n    useEffect(() => {\n        if (!value || (value && value === '')) {\n            setFileName(null);\n        }\n    }, [value])\n\n    async function handleChange(e) {\n\n        waitUpload(true);\n        const data = new FormData();\n\n        const fileName = e.target.files[0].name;\n        data.append('file', e.target.files[0]);\n\n        const response = await api.post('files', data);\n\n        setFileName(fileName)\n\n        const { url } = response.data;\n        setPreview(url);\n        onChange({\n            target: {\n                name,\n                value: url \n            }\n        });\n        waitUpload(false);\n    }\n\n    return (\n        <div className=\"image-input-container\">\n\n            <label htmlFor=\"background\">\n\n                <img src=\"assets/icons/image.svg\" alt=\"\" />\n\n                <input\n                    type=\"file\"\n                    id=\"background\"\n                    accept=\"image/*\"\n                    data-file={preview}\n                    onChange={handleChange}\n                />\n            </label>\n            \n            <span>{fileName}</span>\n        </div>\n    );\n\n}\n\nexport default ImageInput;","import ImageInput from './ImageInput';\n\nexport default ImageInput;","import React, { useMemo } from 'react';\nimport { parseISO, formatDistanceToNow } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\n\nimport './Tweet.css';\n\nfunction Tweet({ tweet }) {\n\n    const { content, createdAt, image_url: tweet_url, author } = tweet;\n    const { name, identify, image_url } = author;\n\n    const date = useMemo(() => \n    formatDistanceToNow(parseISO(createdAt), { locale: pt })\n    , [createdAt])\n\n    return (\n        <div className=\"tweet-container\">\n            <img src={image_url} alt=\"perfil\" />\n            <div>\n                <strong>{name}</strong>\n                <span>{identify} - {date}</span>\n                <p>{content}</p>\n                {tweet_url && \n                <img src={tweet_url} alt=\"tweet\" />}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Tweet;","import Tweet from './Tweet';\n\nexport default Tweet;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ImageInput from './ImageInput';\n\nimport Button from 'components/Button';\nimport Tweet from 'components/Tweet'\nimport api from 'services/api';\n\nimport './Main.css';\n\nfunction Main() {\n\n    const user = useSelector(state => state.user.data);\n\n    const [form, setForm] = useState({});\n    const [tweets, setTweets] = useState([]);\n    const [waitUpload, setWaitUpload] = useState(false);\n\n    useEffect(() => {\n        async function loadTweets() {\n            const response = await api.get('/tweets');\n            setTweets(response.data);\n        }\n        loadTweets();\n    }, [])\n\n    function handleChange({target}) {\n        const { name, value} = target;\n\n        setForm({\n            ...form,\n            [name]: value\n        })\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const body = {\n            ...form,\n            author: user._id\n        }\n\n        const response = await api.post('/tweets', body);\n\n        setForm({ content: '', image_url: '' })\n        setTweets([\n            response.data,\n            ...tweets\n        ]);\n    }\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"title\">\n                <strong>Página Inicial</strong>\n            </div>\n            <div className=\"post\">\n                <img src={user.image_url} alt=\"perfil\" />\n                <form onSubmit={handleSubmit}>\n                    <textarea value={form.content} type=\"text\" name=\"content\" placeholder=\"O que está acontecendo?\" onChange={handleChange} />\n                    <div className=\"actions\">\n                        <ImageInput name=\"image_url\" value={form.image_url} onChange={handleChange} waitUpload={setWaitUpload} />\n                        {!waitUpload && \n                        <Button type=\"submit\">\n                            Tweetar\n                        </Button>}\n                        {!!waitUpload && <span>Aguarde, carregando imagem...</span>}\n                    </div>\n                </form>\n            </div>\n            {tweets.map(tweet => <Tweet key={tweet._id} tweet={tweet} />)}\n        </div>\n    )\n\n}\n\nexport default Main;","import Main from './Main';\n\nexport default Main;","import React from 'react';\nimport history from '@history';\nimport { useSelector } from 'react-redux';\n\nimport Button from 'components/Button';\n\nimport './Profile.css';\n\nfunction Profile() {\n\n    const user = useSelector(state => state.user.data);\n\n    function handleEdit() {\n        history.push('/edit-profile')\n    }\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"title\">\n                {!!user && <strong>{user.name}</strong>}\n            </div>\n            <div className=\"profile\">\n                {!!user && <>\n                {!!user.background_url && <img src={user.background_url} alt=\"profile\" />}\n                {!user.background_url && <div className=\"no-picture\"></div>}\n                <div className=\"details\">\n                    <img src={user.image_url} alt=\"profile\" />\n                    <strong>{user.name}</strong><br/>\n                    <span>{user.identify}</span>\n                    <Button onClick={handleEdit}>Editar Perfil</Button>\n                </div></>}\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","import EditProfile from 'pages/EditProfile';\nimport Main from 'pages/Main';\nimport Profile from 'pages/Profile';\n\nconst Routes = [\n    {\n        path: '/',\n        exact: true,\n        component: Main\n    },\n    {\n        path: '/profile',\n        component: Profile\n    },\n    {\n        path: '/edit-profile',\n        component: EditProfile\n    }\n]\n\nexport default Routes;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userRequest } from 'store/modules/user/actions';\n\nimport './Navigation.css'\n\nfunction Navigation() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(userRequest());\n    }, [dispatch])\n\n    return (\n        <div className=\"navigation-container\">\n            <ul>\n                <Link to=\"/\">\n                    <li><img src=\"assets/icons/twitter.svg\" alt=\"twitter\" /></li>\n                </Link>\n                <Link to=\"/\">\n                    <li>\n                        <img src=\"assets/icons/home.svg\" alt=\"home\" />\n                        <strong>Página Inícial</strong>\n                    </li>\n                </Link>\n                <Link to=\"/profile\">\n                    <li\n                        component={Link}\n                        to=\"/profile\"\n                    >\n                        <img src=\"assets/icons/profile.svg\" alt=\"home\" />\n                        <strong>Perfil</strong>\n                    </li>\n                </Link>\n            </ul>\n        </div>\n    )\n\n}\n\nexport default Navigation;","import Navigation from './Navigation';\n\nexport default Navigation;","import React from 'react';\n\nimport './TrendTopics.css';\n\nfunction TrendTopics() {\n\n    return (\n        <div className=\"trend-topics-container\">\n\n            <input type=\"text\" name=\"search\" placeholder=\"Buscar no Twitter\" />\n\n            <div className=\"panel\">\n                <ul>\n                    <li>\n                        <strong>Assuntos para você</strong>\n                    </li>\n                    <li>\n                        <span>Assuntos no momento no brasil</span><br />\n                        <strong>#MeContrate</strong><br />\n                        <span>18,9 mil tweets</span>\n                    </li>\n                    <li>\n                        <span>Assuntos no momento no brasil</span><br />\n                        <strong>#FERACODE</strong><br />\n                        <span>300 mil tweets</span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default TrendTopics;","import TrendTopics from './TrendTopics';\n\nexport default TrendTopics;","import produce from 'immer';\n\nconst INITIAL_STATE = {\n    data: null,\n    loading: false\n};\n\nexport default function user(state = INITIAL_STATE, action) {\n    return produce(state, draft => {\n        switch (action.type) {\n            case '@user/USER_REQUEST': {\n                draft.loading = true;\n                break;\n            }\n            case '@user/UPDATE_USER_REQUEST': {\n                draft.loading = true;\n                break;\n            }\n            case '@auth/USER_SUCCESS': {\n                draft.data = action.payload.user;\n                draft.loading = false;\n                break;\n            }\n            default:\n        }\n    })\n}","import { combineReducers } from 'redux';\n\nimport user from './user/reducer';\n\nexport default combineReducers({\n    user\n});\n","import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { userSuccess } from './actions'\n\nimport api from 'services/api';\n\nexport function* requestUser() {\n    const response = yield call(api.get, 'users');\n\n    const user = response.data;\n\n    yield put(userSuccess(user));\n}\n\nexport function* updateUser({ payload }) {\n\n    const response = yield call(api.put, `users/${payload.data._id}`, payload.data);\n\n    yield put(userSuccess(response.data));\n}\n\nexport default all([\n    takeLatest('@user/USER_REQUEST', requestUser),\n    takeLatest('@user/UPDATE_USER_REQUEST', updateUser)\n]);","import { all } from 'redux-saga/effects';\n\nimport user from './user/sagas';\n\nexport default function* rootSaga() {\n    return yield all([user]);\n}\n","import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport createStore from './createStore';\nimport persistReducers from './persistReducers';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createStore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store, persistor };\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default reducers => {\n    const persistedReducer = persistReducer({\n        key: 'feratwitter',\n        storage,\n        whitelist: ['user'],\n    }, reducers);\n\n    return persistedReducer;\n};\n","import { createStore, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n    const enhancer = applyMiddleware(...middlewares);\n    return createStore(reducers, enhancer);\n};\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport history from '@history'\nimport routes from './routes';\nimport Navigation from 'components/Navigation';\nimport TrendTopics from 'components/TrendTopics';\n\nimport { store, persistor } from './store';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Router history={history}>\n          <div className=\"app-container\">\n            <Navigation />\n            <div className=\"pages\">\n              {renderRoutes(routes)}\n            </div>\n            <TrendTopics />\n          </div>\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}